from core import loader
import inspect
import types

@loader.tds
class HelpMod(loader.Module):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø—Ä–∞–≤–∫—É –ø–æ –º–æ–¥—É–ª—è–º –∏ –∫–æ–º–∞–Ω–¥–∞–º"""

    strings = {"name": "Help"}

    async def helpcmd(self, message):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ"""
        modules = self.bot.module_manager.modules

        if not modules:
            return await message.edit("‚ùå –ú–æ–¥—É–ª–∏ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã.")

        help_text = "<b>üìñ –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –∏ –º–æ–¥—É–ª–µ–π:</b>\n\n"

        for name, mod in modules.items():
            title = getattr(mod, "strings", {}).get("name", name)

            if isinstance(mod, loader.Module):
                desc = inspect.getdoc(mod) or "–ë–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è"
                commands = [m[:-3] for m in dir(mod) if m.endswith("cmd")]
            elif isinstance(mod, types.ModuleType):
                desc = inspect.getdoc(mod) or "–ë–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è"
                commands = []
            else:
                desc = "–ë–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è"
                commands = []

            help_text += f"üì¶ <b>{title}</b>: {desc}\n"
            if commands:
                help_text += "‚ÄÉ‚Ä¢ " + "\n‚ÄÉ‚Ä¢ ".join([f"<code>.{cmd}</code>" for cmd in commands]) + "\n"
            help_text += "\n"

        await message.edit(help_text, parse_mode="html")

    async def modinfocmd(self, message):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –º–æ–¥—É–ª—è"""
        args = message.text.split(maxsplit=1)
        if len(args) < 2:
            return await message.edit("‚ùó –£–∫–∞–∂–∏ –∏–º—è –º–æ–¥—É–ª—è.")

        mod_name = args[1].strip()

        # –ü–æ–ª—É—á–∞–µ–º module_manager
        manager = getattr(self.bot, "module_manager", None)
        if not manager:
            return await message.edit("‚ùå –ú–µ–Ω–µ–¥–∂–µ—Ä –º–æ–¥—É–ª–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω.")

        doc = manager.module_docs.get(mod_name)
        loaded = mod_name in manager.modules

        if doc is None:
            return await message.edit(f"‚ùå –ú–æ–¥—É–ª—å `{mod_name}` –Ω–µ –Ω–∞–π–¥–µ–Ω.")

        await message.edit(
            f"üì¶ <b>{mod_name}</b>\n"
            f"{'‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω' if loaded else '‚ùå –ù–µ –∑–∞–≥—Ä—É–∂–µ–Ω'}\n"
            f"üìù –û–ø–∏—Å–∞–Ω–∏–µ: {doc}",
            parse_mode="html"
        )