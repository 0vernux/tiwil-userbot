from core.loader import Module, tds
import os
from pathlib import Path

@tds
class UploadModModule(Module):
    """–ó–∞–≥—Ä—É–∑–∫–∞ .py –º–æ–¥—É–ª—è —á–µ—Ä–µ–∑ —Ä–µ–ø–ª–∞–π"""
    strings = {"name": "UploadMod"}

    def init(self):
        super().init()
        self.name = self.strings["name"]

    async def uploadmodcmd(self, message):
        reply = await message.get_reply_message()
        if not reply or not reply.file or not reply.file.name.endswith(".py"):
            return await message.edit("‚ùå –†–µ–ø–ª–∞–π –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–∞ .py —Ñ–∞–π–ª", parse_mode="html")

        filename = reply.file.name
        if filename == ".py":
            return await message.edit("‚ùå –ò–º—è —Ñ–∞–π–ª–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å .py ‚Äî –ø–µ—Ä–µ–∏–º–µ–Ω—É–π —Ñ–∞–π–ª", parse_mode="html")

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ø–∞–ø–∫—É, –Ω–∞—Ö–æ–¥—è—â—É—é—Å—è –Ω–∞ —É—Ä–æ–≤–µ–Ω—å –≤—ã—à–µ –ø–∞–ø–∫–∏ —Å –±–æ—Ç–æ–º (–≤ tiwil/out_modules)
        base_dir = Path(__file__).resolve().parent.parent.parent  # <- tiwil/
        out_path = base_dir / "out_modules"
        out_path.mkdir(exist_ok=True)

        path = out_path / filename

        await message.edit("üì¶ –ó–∞–≥—Ä—É–∂–∞—é –º–æ–¥—É–ª—å...", parse_mode="html")

        # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
        await self.client.download_media(reply.media, file=str(path))

        # –ü—Ä–æ–±—É–µ–º –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å
        try:
            self.bot.module_manager.load_module(str(path))  # –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ
            await message.edit(f"‚úÖ –ú–æ–¥—É–ª—å <b>{filename}</b> —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω!", parse_mode="html")
        except Exception as e:
            await message.edit(
                f"‚ö†Ô∏è –ú–æ–¥—É–ª—å <b>{filename}</b> –∑–∞–≥—Ä—É–∂–µ–Ω, –Ω–æ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å.\n<code>{e}</code>",
                parse_mode="html"
            )